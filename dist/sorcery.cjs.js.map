{"version":3,"file":null,"sources":["../node_modules/sourcemap-codec/dist/sourcemap-codec.es6.js","../src/utils/atob.js","../src/utils/sourceMappingURL.js","../src/utils/getMapFromUrl.js","../src/utils/getSourceMappingUrl.js","../src/utils/getMap.js","../src/Node.js","../src/utils/btoa.js","../src/SourceMap.js","../src/utils/slash.js","../src/Chain.js","../src/index.js"],"sourcesContent":["var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nfunction decode$1 ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encode$1 ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n\nfunction decodeSegments(encodedSegments) {\n\tvar i = encodedSegments.length;\n\tvar segments = new Array(i);\n\n\twhile (i--) {\n\t\tsegments[i] = decode$1(encodedSegments[i]);\n\t}return segments;\n}\n\nfunction decode(mappings) {\n\tvar sourceFileIndex = 0; // second field\n\tvar sourceCodeLine = 0; // third field\n\tvar sourceCodeColumn = 0; // fourth field\n\tvar nameIndex = 0; // fifth field\n\n\tvar lines = mappings.split(';');\n\tvar numLines = lines.length;\n\tvar decoded = new Array(numLines);\n\n\tvar i = undefined;\n\tvar j = undefined;\n\tvar line = undefined;\n\tvar generatedCodeColumn = undefined;\n\tvar decodedLine = undefined;\n\tvar segments = undefined;\n\tvar segment = undefined;\n\tvar result = undefined;\n\n\tfor (i = 0; i < numLines; i += 1) {\n\t\tline = lines[i];\n\n\t\tgeneratedCodeColumn = 0; // first field - reset each time\n\t\tdecodedLine = [];\n\n\t\tsegments = decodeSegments(line.split(','));\n\n\t\tfor (j = 0; j < segments.length; j += 1) {\n\t\t\tsegment = segments[j];\n\n\t\t\tif (!segment.length) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tgeneratedCodeColumn += segment[0];\n\n\t\t\tresult = [generatedCodeColumn];\n\t\t\tdecodedLine.push(result);\n\n\t\t\tif (segment.length === 1) {\n\t\t\t\t// only one field!\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsourceFileIndex += segment[1];\n\t\t\tsourceCodeLine += segment[2];\n\t\t\tsourceCodeColumn += segment[3];\n\n\t\t\tresult.push(sourceFileIndex, sourceCodeLine, sourceCodeColumn);\n\n\t\t\tif (segment.length === 5) {\n\t\t\t\tnameIndex += segment[4];\n\t\t\t\tresult.push(nameIndex);\n\t\t\t}\n\t\t}\n\n\t\tdecoded[i] = decodedLine;\n\t}\n\n\treturn decoded;\n}\n\nfunction encode(decoded) {\n\tvar offsets = {\n\t\tgeneratedCodeColumn: 0,\n\t\tsourceFileIndex: 0, // second field\n\t\tsourceCodeLine: 0, // third field\n\t\tsourceCodeColumn: 0, // fourth field\n\t\tnameIndex: 0 // fifth field\n\t};\n\n\treturn decoded.map(function (line) {\n\t\toffsets.generatedCodeColumn = 0; // first field - reset each time\n\t\treturn line.map(encodeSegment).join(',');\n\t}).join(';');\n\n\tfunction encodeSegment(segment) {\n\t\tif (!segment.length) {\n\t\t\treturn segment;\n\t\t}\n\n\t\tvar result = new Array(segment.length);\n\n\t\tresult[0] = segment[0] - offsets.generatedCodeColumn;\n\t\toffsets.generatedCodeColumn = segment[0];\n\n\t\tif (segment.length === 1) {\n\t\t\t// only one field!\n\t\t\treturn encode$1(result);\n\t\t}\n\n\t\tresult[1] = segment[1] - offsets.sourceFileIndex;\n\t\tresult[2] = segment[2] - offsets.sourceCodeLine;\n\t\tresult[3] = segment[3] - offsets.sourceCodeColumn;\n\n\t\toffsets.sourceFileIndex = segment[1];\n\t\toffsets.sourceCodeLine = segment[2];\n\t\toffsets.sourceCodeColumn = segment[3];\n\n\t\tif (segment.length === 5) {\n\t\t\tresult[4] = segment[4] - offsets.nameIndex;\n\t\t\toffsets.nameIndex = segment[4];\n\t\t}\n\n\t\treturn encode$1(result);\n\t}\n}\n\nexport { decode, encode };\n//# sourceMappingURL=sourcemap-codec.es6.js.map","/**\r\n * Decodes a base64 string\r\n * @param {string} base64 - the string to decode\r\n * @returns {string}\r\n */\r\nexport default function atob ( base64 ) {\r\n\treturn new Buffer( base64, 'base64' ).toString( 'utf8' );\r\n}","// this looks ridiculous, but it prevents sourcemap tooling from mistaking\r\n// this for an actual sourceMappingURL\r\nlet SOURCEMAPPING_URL = 'sourceMa';\r\nSOURCEMAPPING_URL += 'ppingURL';\r\n\r\nexport default SOURCEMAPPING_URL;\r\n","import { dirname, resolve } from 'path';\r\nimport { readFile, readFileSync, Promise } from 'sander';\r\nimport atob from './atob.js';\r\nimport SOURCEMAPPING_URL from './sourceMappingURL.js';\r\n\r\nfunction parseJSON ( json, url ) {\r\n\ttry {\r\n\t\treturn JSON.parse( json );\r\n\t} catch ( err ) {\r\n\t\tthrow new Error( `Could not parse sourcemap (${url}): ${err.message}` );\r\n\t}\r\n}\r\n\r\n/**\r\n * Turns a sourceMappingURL into a sourcemap\r\n * @param {string} url - the sourceMappingURL. Can be a\r\n   base64-encoded data URI\r\n * @param {string} base - the URL against which relative URLS\r\n   should be resolved\r\n * @param {boolean} sync - if `true`, return a promise, otherwise\r\n   return the sourcemap\r\n * @returns {object} - a version 3 sourcemap\r\n */\r\nexport default function getMapFromUrl ( url, base, sync ) {\r\n\tif ( /^data:/.test( url ) ) { // TODO beef this up\r\n\t\tconst match = /base64,(.+)$/.exec( url );\r\n\r\n\t\tif ( !match ) {\r\n\t\t\tthrow new Error( `${SOURCEMAPPING_URL} is not base64-encoded` );\r\n\t\t}\r\n\r\n\t\tconst json = atob( match[1] );\r\n\t\tconst map = parseJSON( json, `data URI in ${base}` );\r\n\t\treturn sync ? map : Promise.resolve( map );\r\n\t}\r\n\r\n\turl = resolve( dirname( base ), decodeURI( url ) );\r\n\r\n\tif ( sync ) {\r\n\t\treturn parseJSON( readFileSync( url, { encoding: 'utf-8' }), url );\r\n\t} else {\r\n\t\treturn readFile( url, { encoding: 'utf-8' }).then( json => parseJSON( json, url ) );\r\n\t}\r\n}\r\n","import SOURCEMAPPING_URL from './sourceMappingURL.js';\r\n\r\nexport default function getSourceMappingUrl ( str ) {\r\n\tvar index, substring, url, match;\r\n\r\n\t// assume we want the last occurence\r\n\tindex = str.lastIndexOf( `${SOURCEMAPPING_URL}=` );\r\n\r\n\tif ( index === -1 ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tsubstring = str.substring( index + 17 );\r\n\tmatch = /^[^\\r\\n]+/.exec( substring );\r\n\r\n\turl = match ? match[0] : null;\r\n\r\n\t// possibly a better way to do this, but we don't want to exclude whitespace\r\n\t// from the sourceMappingURL because it might not have been correctly encoded\r\n\tif ( url && url.slice( -2 ) === '*/' ) {\r\n\t\turl = url.slice( 0, -2 ).trim();\r\n\t}\r\n\r\n\treturn url;\r\n}\r\n","import { Promise } from 'sander';\r\nimport getMapFromUrl from './getMapFromUrl.js';\r\nimport getSourceMappingUrl from './getSourceMappingUrl.js';\r\n\r\nexport default function getMap ( node, sourceMapByPath, sync ) {\r\n\tif ( node.file in sourceMapByPath ) {\r\n\t\tconst map = sourceMapByPath[ node.file ];\r\n\t\treturn sync ? map : Promise.resolve( map );\r\n\t}\r\n\r\n\telse {\r\n\t\tconst url = getSourceMappingUrl( node.content );\r\n\r\n\t\tif ( !url ) {\r\n\t\t\tnode.isOriginalSource = true;\r\n\t\t\treturn sync ? null : Promise.resolve( null );\r\n\t\t}\r\n\r\n\t\treturn getMapFromUrl( url, node.file, sync );\r\n\t}\r\n}\r\n","import { dirname, resolve } from 'path';\r\nimport { readFile, readFileSync, Promise } from 'sander';\r\nimport { decode } from 'sourcemap-codec';\r\nimport getMap from './utils/getMap.js';\r\nvar settle = require('promise-settle');\r\n\r\nexport default function Node ({ file, content }) {\r\n\tthis.file = file ? resolve( file ) : null;\r\n\tthis.content = content || null; // sometimes exists in sourcesContent, sometimes doesn't\r\n\r\n\tif ( !this.file && this.content === null ) {\r\n\t\tthrow new Error( 'A source must specify either file or content' );\r\n\t}\r\n\r\n\t// these get filled in later\r\n\tthis.map = null;\r\n\tthis.mappings = null;\r\n\tthis.sources = null;\r\n\tthis.isOriginalSource = null;\r\n\r\n\tthis._stats = {\r\n\t\tdecodingTime: 0,\r\n\t\tencodingTime: 0,\r\n\t\ttracingTime: 0,\r\n\r\n\t\tuntraceable: 0\r\n\t};\r\n}\r\n\r\nNode.prototype = {\r\n\tload ( sourcesContentByPath, sourceMapByPath ) {\r\n\t\treturn getContent( this, sourcesContentByPath ).then( content => {\r\n\t\t\tthis.content = sourcesContentByPath[ this.file ] = content;\r\n\r\n\t\t\treturn getMap( this, sourceMapByPath ).then( map => {\r\n\t\t\t\tif ( !map ) return null;\r\n\r\n\t\t\t\tthis.map = map;\r\n\r\n\t\t\t\tlet decodingStart = process.hrtime();\r\n\t\t\t\tthis.mappings = decode( map.mappings );\r\n\t\t\t\tlet decodingTime = process.hrtime( decodingStart );\r\n\t\t\t\tthis._stats.decodingTime = 1e9 * decodingTime[0] + decodingTime[1];\r\n\r\n\t\t\t\tconst sourcesContent = map.sourcesContent || [];\r\n\r\n\t\t\t\tconst sourceRoot = resolve( dirname( this.file ), map.sourceRoot || '' );\r\n\r\n\t\t\t\tthis.sources = map.sources.map( ( source, i ) => {\r\n\t\t\t\t\treturn new Node({\r\n\t\t\t\t\t\tfile: source ? resolve( sourceRoot, source ) : null,\r\n\t\t\t\t\t\tcontent: sourcesContent[i]\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst promises = this.sources.map( node => node.load( sourcesContentByPath, sourceMapByPath ) );\r\n\t\t\t\t \r\n\t\t\t\treturn settle(promises)\r\n\t\t\t\t\t.then(function (results) {\r\n\t\t\t\t\t\tresults.forEach(function (result) {\r\n\t\t\t\t\t\t\tif (!result.isFulfilled()) {\r\n\t\t\t\t\t\t\t\tconsole.log('WARNING: Cannot load original or map file. The mapping will not be converted. Correct mapping path or remove it:', result.reason());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\tloadSync ( sourcesContentByPath, sourceMapByPath ) {\r\n\t\tif ( !this.content ) {\r\n\t\t\tif ( !sourcesContentByPath[ this.file ] ) {\r\n\t\t\t\tsourcesContentByPath[ this.file ] = readFileSync( this.file, { encoding: 'utf-8' });\r\n\t\t\t}\r\n\r\n\t\t\tthis.content = sourcesContentByPath[ this.file ];\r\n\t\t}\r\n\r\n\t\tconst map = getMap( this, sourceMapByPath, true );\r\n\t\tlet sourcesContent;\r\n\r\n\t\tif ( !map ) {\r\n\t\t\tthis.isOriginalSource = true;\r\n\t\t} else {\r\n\t\t\tthis.map = map;\r\n\t\t\tthis.mappings = decode( map.mappings );\r\n\r\n\t\t\tsourcesContent = map.sourcesContent || [];\r\n\r\n\t\t\tconst sourceRoot = resolve( dirname( this.file ), map.sourceRoot || '' );\r\n\r\n\t\t\tthis.sources = map.sources.map( ( source, i ) => {\r\n\t\t\t\tconst node = new Node({\r\n\t\t\t\t\tfile: resolve( sourceRoot, source ),\r\n\t\t\t\t\tcontent: sourcesContent[i]\r\n\t\t\t\t});\r\n\r\n\t\t\t\tnode.loadSync( sourcesContentByPath, sourceMapByPath );\r\n\t\t\t\treturn node;\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Traces a segment back to its origin\r\n\t * @param {number} lineIndex - the zero-based line index of the\r\n\t   segment as found in `this`\r\n\t * @param {number} columnIndex - the zero-based column index of the\r\n\t   segment as found in `this`\r\n\t * @param {string || null} - if specified, the name that should be\r\n\t   (eventually) returned, as it is closest to the generated code\r\n\t * @returns {object}\r\n\t     @property {string} source - the filepath of the source\r\n\t     @property {number} line - the one-based line index\r\n\t     @property {number} column - the zero-based column index\r\n\t     @property {string || null} name - the name corresponding\r\n\t     to the segment being traced\r\n\t */\r\n\ttrace ( lineIndex, columnIndex, name ) {\r\n\t\t// If this node doesn't have a source map, we have\r\n\t\t// to assume it is the original source\r\n\t\tif ( this.isOriginalSource ) {\r\n\t\t\treturn {\r\n\t\t\t\tsource: this.file,\r\n\t\t\t\tline: lineIndex + 1,\r\n\t\t\t\tcolumn: columnIndex || 0,\r\n\t\t\t\tname: name\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Otherwise, we need to figure out what this position in\r\n\t\t// the intermediate file corresponds to in *its* source\r\n\t\tconst segments = this.mappings[ lineIndex ];\r\n\r\n\t\tif ( !segments || segments.length === 0 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif ( columnIndex != null ) {\r\n\t\t\tlet len = segments.length;\r\n\t\t\tlet i;\r\n\r\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\r\n\t\t\t\tlet generatedCodeColumn = segments[i][0];\r\n\r\n\t\t\t\tif ( generatedCodeColumn > columnIndex ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( generatedCodeColumn === columnIndex ) {\r\n\t\t\t\t\tif ( segments[i].length < 4 ) return null;\r\n\r\n\t\t\t\t\tlet sourceFileIndex = segments[i][1];\r\n\t\t\t\t\tlet sourceCodeLine = segments[i][2];\r\n\t\t\t\t\tlet sourceCodeColumn = segments[i][3];\r\n\t\t\t\t\tlet nameIndex = segments[i][4];\r\n\r\n\t\t\t\t\tlet parent = this.sources[ sourceFileIndex ];\r\n\t\t\t\t\treturn parent.trace( sourceCodeLine, sourceCodeColumn, this.map.names[ nameIndex ] || name );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// fall back to a line mapping\r\n\t\tlet sourceFileIndex = segments[0][1];\r\n\t\tlet sourceCodeLine = segments[0][2];\r\n\t\tlet nameIndex = segments[0][4];\r\n\r\n\t\tlet parent = this.sources[ sourceFileIndex ];\r\n\t\treturn parent.trace( sourceCodeLine, null, this.map.names[ nameIndex ] || name );\r\n\t}\r\n};\r\n\r\nfunction getContent ( node, sourcesContentByPath ) {\r\n\tif ( node.file in sourcesContentByPath ) {\r\n\t\tnode.content = sourcesContentByPath[ node.file ];\r\n\t}\r\n\r\n\tif ( !node.content ) {\r\n\t\treturn readFile( node.file, { encoding: 'utf-8' });\r\n\t}\r\n\r\n\treturn Promise.resolve( node.content );\r\n}\r\n","/**\r\n * Encodes a string as base64\r\n * @param {string} str - the string to encode\r\n * @returns {string}\r\n */\r\nexport default function btoa ( str ) {\r\n\treturn new Buffer( str ).toString( 'base64' );\r\n}","import btoa from './utils/btoa.js';\r\n\r\nexport default function SourceMap ( properties ) {\r\n\tthis.version = 3;\r\n\r\n\tthis.file           = properties.file;\r\n\tthis.sources        = properties.sources;\r\n\tthis.sourcesContent = properties.sourcesContent;\r\n\tthis.names          = properties.names;\r\n\tthis.mappings       = properties.mappings;\r\n}\r\n\r\nSourceMap.prototype = {\r\n\ttoString () {\r\n\t\treturn JSON.stringify( this );\r\n\t},\r\n\r\n\ttoUrl () {\r\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\r\n\t}\r\n};\r\n","export default function slash ( path ) {\r\n\treturn typeof path === 'string' ?\r\n\t\tpath.replace( /\\\\/g, '/' ) :\r\n\t\tpath;\r\n}\r\n","import { basename, dirname, extname, relative, resolve } from 'path';\r\nimport { writeFile, writeFileSync } from 'sander';\r\nimport { encode } from 'sourcemap-codec';\r\nimport SourceMap from './SourceMap.js';\r\nimport slash from './utils/slash.js';\r\nimport SOURCEMAPPING_URL from './utils/sourceMappingURL.js';\r\n\r\nconst SOURCEMAP_COMMENT = new RegExp( `\\n*(?:` +\r\n\t`\\\\/\\\\/[@#]\\\\s*${SOURCEMAPPING_URL}=([^'\"]+)|` +      // js\r\n\t`\\\\/\\\\*#?\\\\s*${SOURCEMAPPING_URL}=([^'\"]+)\\\\s\\\\*\\\\/)` + // css\r\n'\\\\s*$', 'g' );\r\n\r\nexport default function Chain ( node, sourcesContentByPath ) {\r\n\tthis.node = node;\r\n\tthis.sourcesContentByPath = sourcesContentByPath;\r\n\r\n\tthis._stats = {};\r\n}\r\n\r\nChain.prototype = {\r\n\tstat () {\r\n\t\treturn {\r\n\t\t\tselfDecodingTime: this._stats.decodingTime / 1e6,\r\n\t\t\ttotalDecodingTime: ( this._stats.decodingTime + tally( this.node.sources, 'decodingTime' ) ) / 1e6,\r\n\r\n\t\t\tencodingTime: this._stats.encodingTime / 1e6,\r\n\t\t\ttracingTime: this._stats.tracingTime / 1e6,\r\n\r\n\t\t\tuntraceable: this._stats.untraceable\r\n\t\t};\r\n\t},\r\n\r\n\tapply ( options = {} ) {\r\n\t\tlet allNames = [];\r\n\t\tlet allSources = [];\r\n\r\n\t\tconst applySegment = ( segment, result ) => {\r\n\t\t\tif ( segment.length < 4 ) return;\r\n\r\n\t\t\tconst traced = this.node.sources[ segment[1] ].trace( // source\r\n\t\t\t\tsegment[2], // source code line\r\n\t\t\t\tsegment[3], // source code column\r\n\t\t\t\tthis.node.map.names[ segment[4] ]\r\n\t\t\t);\r\n\r\n\t\t\tif ( !traced ) {\r\n\t\t\t\tthis._stats.untraceable += 1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet sourceIndex = allSources.indexOf( traced.source );\r\n\t\t\tif ( !~sourceIndex ) {\r\n\t\t\t\tsourceIndex = allSources.length;\r\n\t\t\t\tallSources.push( traced.source );\r\n\t\t\t}\r\n\r\n\t\t\tlet newSegment = [\r\n\t\t\t\tsegment[0], // generated code column\r\n\t\t\t\tsourceIndex,\r\n\t\t\t\ttraced.line - 1,\r\n\t\t\t\ttraced.column\r\n\t\t\t];\r\n\r\n\t\t\tif ( traced.name ) {\r\n\t\t\t\tlet nameIndex = allNames.indexOf( traced.name );\r\n\t\t\t\tif ( !~nameIndex ) {\r\n\t\t\t\t\tnameIndex = allNames.length;\r\n\t\t\t\t\tallNames.push( traced.name );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewSegment[4] = nameIndex;\r\n\t\t\t}\r\n\r\n\t\t\tresult[ result.length ] = newSegment;\r\n\t\t};\r\n\r\n\t\t// Trace mappings\r\n\t\tlet tracingStart = process.hrtime();\r\n\r\n\t\tlet i = this.node.mappings.length;\r\n\t\tlet resolved = new Array( i );\r\n\r\n\t\tlet j, line, result;\r\n\r\n\t\twhile ( i-- ) {\r\n\t\t\tline = this.node.mappings[i];\r\n\t\t\tresolved[i] = result = [];\r\n\r\n\t\t\tfor ( j = 0; j < line.length; j += 1 ) {\r\n\t\t\t\tapplySegment( line[j], result );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet tracingTime = process.hrtime( tracingStart );\r\n\t\tthis._stats.tracingTime = 1e9 * tracingTime[0] + tracingTime[1];\r\n\r\n\t\t// Encode mappings\r\n\t\tlet encodingStart = process.hrtime();\r\n\t\tlet mappings = encode( resolved );\r\n\t\tlet encodingTime = process.hrtime( encodingStart );\r\n\t\tthis._stats.encodingTime = 1e9 * encodingTime[0] + encodingTime[1];\r\n\r\n\t\tlet includeContent = options.includeContent !== false;\r\n\r\n\t\treturn new SourceMap({\r\n\t\t\tfile: basename( this.node.file ),\r\n\t\t\tsources: allSources.map( source => slash( relative( options.base || dirname( this.node.file ), source ) ) ),\r\n\t\t\tsourcesContent: allSources.map( source => includeContent ? this.sourcesContentByPath[ source ] : null ),\r\n\t\t\tnames: allNames,\r\n\t\t\tmappings\r\n\t\t});\r\n\t},\r\n\r\n\ttrace ( oneBasedLineIndex, zeroBasedColumnIndex ) {\r\n\t\treturn this.node.trace( oneBasedLineIndex - 1, zeroBasedColumnIndex, null );\r\n\t},\r\n\r\n\twrite ( dest, options ) {\r\n\t\tif ( typeof dest !== 'string' ) {\r\n\t\t\toptions = dest;\r\n\t\t\tdest = this.node.file;\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\tconst { resolved, content, map } = processWriteOptions( dest, this, options );\r\n\r\n\t\tlet promises = [ writeFile( resolved, content ) ];\r\n\r\n\t\tif ( !options.inline ) {\r\n\t\t\tpromises.push( writeFile( resolved + '.map', map.toString() ) );\r\n\t\t}\r\n\r\n\t\treturn Promise.all( promises );\r\n\t},\r\n\r\n\twriteSync ( dest, options ) {\r\n\t\tif ( typeof dest !== 'string' ) {\r\n\t\t\toptions = dest;\r\n\t\t\tdest = this.node.file;\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\tconst { resolved, content, map } = processWriteOptions( dest, this, options );\r\n\r\n\t\twriteFileSync( resolved, content );\r\n\r\n\t\tif ( !options.inline ) {\r\n\t\t\twriteFileSync( resolved + '.map', map.toString() );\r\n\t\t}\r\n\t}\r\n};\r\n\r\nfunction processWriteOptions ( dest, chain, options ) {\r\n\tconst resolved = resolve( dest );\r\n\r\n\tconst map = chain.apply({\r\n\t\tincludeContent: options.includeContent,\r\n\t\tbase: options.base ? resolve( options.base ) : dirname( resolved )\r\n\t});\r\n\r\n\tconst url = options.inline ? map.toUrl() : ( options.absolutePath ? resolved : basename( resolved ) ) + '.map';\r\n\r\n\t// TODO shouldn't url be relative?\r\n\tconst content = chain.node.content.replace( SOURCEMAP_COMMENT, '' ) + sourcemapComment( url, resolved );\r\n\r\n\treturn { resolved, content, map };\r\n}\r\n\r\nfunction tally ( nodes, stat ) {\r\n\treturn nodes.reduce( ( total, node ) => {\r\n\t\treturn total + node._stats[ stat ];\r\n\t}, 0 );\r\n}\r\n\r\nfunction sourcemapComment ( url, dest ) {\r\n\tconst ext = extname( dest );\r\n\turl = encodeURI( url );\r\n\r\n\tif ( ext === '.css' ) {\r\n\t\treturn `\\n/*# ${SOURCEMAPPING_URL}=${url} */\\n`;\r\n\t}\r\n\r\n\treturn `\\n//# ${SOURCEMAPPING_URL}=${url}\\n`;\r\n}\r\n","import { resolve } from 'path';\r\nimport Node from './Node.js';\r\nimport Chain from './Chain.js';\r\n\r\nexport function load ( file, options ) {\r\n\tconst { node, sourcesContentByPath, sourceMapByPath } = init( file, options );\r\n\r\n\treturn node.load( sourcesContentByPath, sourceMapByPath )\r\n\t\t.then( () => node.isOriginalSource ? null : new Chain( node, sourcesContentByPath ) );\r\n}\r\n\r\nexport function loadSync ( file, options = {} ) {\r\n\tconst { node, sourcesContentByPath, sourceMapByPath } = init( file, options );\r\n\r\n\tnode.loadSync( sourcesContentByPath, sourceMapByPath );\r\n\treturn node.isOriginalSource ? null : new Chain( node, sourcesContentByPath );\r\n}\r\n\r\nfunction init ( file, options = {} ) {\r\n\tconst node = new Node({ file });\r\n\r\n\tlet sourcesContentByPath = {};\r\n\tlet sourceMapByPath = {};\r\n\r\n\tif ( options.content ) {\r\n\t\tObject.keys( options.content ).forEach( key => {\r\n\t\t\tsourcesContentByPath[ resolve( key ) ] = options.content[ key ];\r\n\t\t});\r\n\t}\r\n\r\n\tif ( options.sourcemaps ) {\r\n\t\tObject.keys( options.sourcemaps ).forEach( key => {\r\n\t\t\tsourceMapByPath[ resolve( key ) ] = options.sourcemaps[ key ];\r\n\t\t});\r\n\t}\r\n\r\n\treturn { node, sourcesContentByPath, sourceMapByPath };\r\n}\r\n"],"names":["let","const","SOURCEMAPPING_URL","Promise","resolve","dirname","readFileSync","readFile","this","sourceFileIndex","sourceCodeLine","nameIndex","parent","basename","relative","writeFile","writeFileSync","extname"],"mappings":"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"}